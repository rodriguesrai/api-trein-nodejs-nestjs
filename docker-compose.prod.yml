# production docker-compose file
version: '3.7'
services:
  api-trein:
    image: image: ghcr.io/rodriguesrai/api-trein-nodejs-nestjs:latest
    ports:
      - 3000:3000
    # depends_on:
    #   database:
    #     condition: service_healthy
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      BATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
    volumes:
      - ./api-trein-nodejs-nestjs/.env:/app/.env
  # database:
  #   image: mysql:8.0.32
  #   container_name: database
  #   cap_add:
  #     - SYS_NICE
  #   restart: always
  #   ports:
  #     - 3306:3306
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
  #     MYSQL_DATABASE: ${DATABASE_NAME}
  #   volumes: 
  #   -  "./init.sql:/docker-entrypoint-initdb.d/1.sql"
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     interval: 10s
  #     retries: 5
  #     timeout: 5s